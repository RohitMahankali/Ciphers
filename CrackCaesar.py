from sys import argv

def main():
    cipher_text = argv[1]
    dictionary_text = argv[2]
    f1 = open(cipher_text)
    f2 = open(dictionary_text)
    cText = f1.read()
    cText = cText.lower()
    words = f2.read()
   # print dText
    orig = ["a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z"]
    shifts = {
        1 : ["b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","a"],
        2: ["c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v",
            "w", "x", "y", "z", "a","b"],
        3: ["d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v",
            "w", "x", "y", "z", "a","b", "c"],
        4: ["e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v",
            "w", "x", "y", "z", "a", "b", "c", "d"],
        5: ["f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v",
            "w", "x", "y", "z", "a","b", "c", "d", "e"],
        6: ["g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v",
            "w", "x", "y", "z", "a", "b", "c", "d", "e", "f"],
        7: ["h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v",
            "w", "x", "y", "z", "a", "b", "c", "d", "e", "f","g"],
        8: ["i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v",
            "w", "x", "y", "z", "a", "b", "c", "d", "e", "f","g", "h"],
        9: ["j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v",
            "w", "x", "y", "z", "a", "b", "c", "d", "e", "f","g", "h", "i"],
        10: ["k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v",
             "w", "x", "y", "z", "a", "b", "c", "d", "e", "f","g", "h", "i", "j"],
        11: ["l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v",
             "w", "x", "y", "z", "a", "b", "c", "d", "e", "f","g", "h", "i", "j", "k"],
        12: ["m", "n", "o", "p", "q", "r", "s", "t", "u", "v",
             "w", "x", "y", "z", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k","l"],
        13: ["n", "o", "p", "q", "r", "s", "t", "u", "v",
             "w", "x", "y", "z", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k","l", "m"],
        14: ["o", "p", "q", "r", "s", "t", "u", "v",
             "w", "x", "y", "z", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k","l", "m", "n"],
        15: ["p", "q", "r", "s", "t", "u", "v",
             "w", "x", "y", "z", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k","l", "m", "n", "o"],
        16: ["q", "r", "s", "t", "u", "v",
             "w", "x", "y", "z", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k","l", "m", "n", "o", "p"],
        17: ["r", "s", "t", "u", "v",
             "w", "x", "y", "z", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p","q"],
        18: ["s", "t", "u", "v", "w",
             "x", "y", "z", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p","q","r"],
        19: ["t", "u", "v","w", "x", "y",
             "z", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p","q", "r", "s"],
        20: ["u", "v","w", "x", "y", "z",
             "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p","q", "r", "s", "t"],
        21: ["v","w", "x", "y", "z", "a",
             "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p","q", "r", "s", "t", "u"],
        22: ["w", "x", "y", "z", "a",
             "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u","v"],
        23: ["x", "y", "z", "a","b",
             "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u","v", "w"],
        24: ["y", "z", "a","b","c",
             "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u","v", "w", "x"],
        25: ["z", "a","b","c","d",
             "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u","v", "w", "x", "y"]

    }
    deciphers = []
    deciphers.append(cText)
    for i in range(1,26):
        dText = ""
        for char in cText:
            if char not in orig:
                dText+=char
            else:
                dText += shifts[i][orig.index(char)]
        deciphers.append(dText)

    checks = words.split()

    counts = [0 for _ in range(26)]

    for i in range(len(deciphers)):
        broken = deciphers[i].split()
        for br in broken:
            for check in checks:
                if br == check:
                    counts[i]+=1

    maxInd = counts.index(max(counts))
    print maxInd
    print deciphers[maxInd]


    '''
    for i in range(len(deciphers)):
        print deciphers[i]
        print "---------------------------------------------------------------------------------------------------"
        print "---------------------------------------------------------------------------------------------------"
        print "---------------------------------------------------------------------------------------------------"
        print "---------------------------------------------------------------------------------------------------"
        print "---------------------------------------------------------------------------------------------------"
        print "---------------------------------------------------------------------------------------------------"
        print "---------------------------------------------------------------------------------------------------"
        print "---------------------------------------------------------------------------------------------------"
        print "---------------------------------------------------------------------------------------------------"
        print "---------------------------------------------------------------------------------------------------"

    '''







if __name__ == "__main__":
    main()